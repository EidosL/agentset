{
  "openapi": "3.1.1",
  "info": {
    "title": "AgentsetAPI",
    "description": "Agentset is agentic rag-as-a-service",
    "version": "0.0.1",
    "contact": {
      "name": "Agentset Support",
      "email": "support@agentset.ai",
      "url": "https://api.agentset.ai/"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/agentset-ai/agentset/blob/main/LICENSE.md"
    }
  },
  "servers": [
    {
      "url": "https://api.agentset.ai",
      "description": "Production API"
    }
  ],
  "paths": {
    "/v1/namespace": {
      "get": {
        "operationId": "listNamespaces",
        "x-speakeasy-name-override": "list",
        "summary": "Retrieve a list of namespaces",
        "description": "Retrieve a list of namespaces for the authenticated organization.",
        "tags": [
          "Namespaces"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved namespaces",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NamespaceSchema"
                      }
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createNamespace",
        "x-speakeasy-name-override": "create",
        "x-speakeasy-usage-example": true,
        "summary": "Create a namespace.",
        "description": "Create a namespace for the authenticated organization.",
        "tags": [
          "Namespaces"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                  },
                  "slug": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 48
                  },
                  "embeddingConfig": {
                    "$ref": "#/components/schemas/EmbeddingConfigSchema"
                  },
                  "vectorStoreConfig": {
                    "$ref": "#/components/schemas/VectorStoreSchema"
                  }
                },
                "required": [
                  "name",
                  "slug"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/NamespaceSchema"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/namespace/{namespaceId}": {
      "get": {
        "operationId": "getNamespace",
        "x-speakeasy-name-override": "get",
        "summary": "Retrieve a namespace",
        "description": "Retrieve the info for a namespace.",
        "tags": [
          "Namespaces"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespaceId",
            "schema": {
              "description": "The id of the namespace (prefixed with ns_)",
              "examples": [
                "ns_123"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The id of the namespace (prefixed with ns_)"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/NamespaceSchema"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateNamespace",
        "x-speakeasy-name-override": "update",
        "x-speakeasy-max-method-params": 2,
        "summary": "Update a namespace.",
        "description": "Update a namespace for the authenticated organization. If there is no change, return it as it is.",
        "tags": [
          "Namespaces"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespaceId",
            "schema": {
              "description": "The id of the namespace (prefixed with ns_)",
              "examples": [
                "ns_123"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The id of the namespace (prefixed with ns_)"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 64
                  },
                  "slug": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 48
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/NamespaceSchema"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteNamespace",
        "x-speakeasy-name-override": "delete",
        "x-speakeasy-max-method-params": 1,
        "summary": "Delete a namespace.",
        "description": "Delete a namespace for the authenticated organization. This will delete all the data associated with the namespace.",
        "tags": [
          "Namespaces"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespaceId",
            "schema": {
              "description": "The id of the namespace (prefixed with ns_)",
              "examples": [
                "ns_123"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The id of the namespace (prefixed with ns_)"
          }
        ],
        "responses": {
          "204": {
            "description": "The deleted namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/NamespaceSchema"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/namespace/{namespaceId}/ingest-jobs": {
      "get": {
        "operationId": "listIngestJobs",
        "x-speakeasy-name-override": "list",
        "x-speakeasy-pagination": {
          "type": "cursor",
          "inputs": [
            {
              "name": "cursor",
              "in": "parameters",
              "type": "cursor"
            }
          ],
          "outputs": {
            "nextCursor": "$.pagination.nextCursor"
          }
        },
        "summary": "Retrieve a list of ingest jobs",
        "description": "Retrieve a paginated list of ingest jobs for the authenticated organization.",
        "tags": [
          "Ingest Jobs"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespaceId",
            "schema": {
              "description": "The id of the namespace (prefixed with ns_)",
              "examples": [
                "ns_123"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The id of the namespace (prefixed with ns_)"
          },
          {
            "in": "query",
            "name": "statuses",
            "schema": {
              "description": "Comma separated list of statuses to filter by.",
              "type": "string"
            },
            "description": "Comma separated list of statuses to filter by."
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "description": "The field to order by. Default is `createdAt`.",
              "default": "createdAt",
              "type": "string",
              "enum": [
                "createdAt"
              ]
            },
            "description": "The field to order by. Default is `createdAt`."
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "description": "The sort order. Default is `desc`.",
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The sort order. Default is `desc`."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "description": "The cursor to paginate by.",
              "type": "string"
            },
            "description": "The cursor to paginate by."
          },
          {
            "in": "query",
            "name": "cursorDirection",
            "schema": {
              "description": "The direction to paginate by.",
              "default": "forward",
              "type": "string",
              "enum": [
                "forward",
                "backward"
              ]
            },
            "description": "The direction to paginate by."
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "description": "The number of records to return per page.",
              "default": 30,
              "type": "number",
              "minimum": 1,
              "maximum": 100
            },
            "description": "The number of records to return per page."
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "schema": {
              "description": "The tenant id to use for the request. If not provided, the default tenant will be used.",
              "type": "string"
            },
            "description": "The tenant id to use for the request. If not provided, the default tenant will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved ingest jobs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IngestJobSchema"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "nextCursor": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      },
                      "required": [
                        "nextCursor"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data",
                    "pagination"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createIngestJob",
        "x-speakeasy-name-override": "create",
        "summary": "Create an ingest job",
        "description": "Create an ingest job for the authenticated organization.",
        "tags": [
          "Ingest Jobs"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespaceId",
            "schema": {
              "description": "The id of the namespace (prefixed with ns_)",
              "examples": [
                "ns_123"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The id of the namespace (prefixed with ns_)"
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "schema": {
              "description": "The tenant id to use for the request. If not provided, the default tenant will be used.",
              "type": "string"
            },
            "description": "The tenant id to use for the request. If not provided, the default tenant will be used."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the ingest job.",
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "payload": {
                    "description": "The ingest job payload.",
                    "oneOf": [
                      {
                        "title": "Text Payload",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "TEXT"
                          },
                          "text": {
                            "description": "The text to ingest.",
                            "type": "string"
                          },
                          "fileName": {
                            "description": "The name of the file.",
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "text"
                        ]
                      },
                      {
                        "title": "URL Payload",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "FILE"
                          },
                          "fileUrl": {
                            "description": "The URL of the file to ingest.",
                            "type": "string"
                          },
                          "fileName": {
                            "description": "The name of the file.",
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "fileUrl"
                        ]
                      },
                      {
                        "title": "Managed File Payload",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "MANAGED_FILE"
                          },
                          "key": {
                            "description": "The key of the managed file to ingest.",
                            "type": "string"
                          },
                          "fileName": {
                            "description": "The name of the file.",
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "key"
                        ]
                      },
                      {
                        "title": "Batch Payload",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "BATCH"
                          },
                          "items": {
                            "description": "The items to ingest.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "TEXT"
                                    },
                                    "text": {
                                      "description": "The text to ingest.",
                                      "type": "string"
                                    },
                                    "fileName": {
                                      "description": "The name of the file.",
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "config": {
                                      "description": "The ingest job config.",
                                      "type": "object",
                                      "properties": {
                                        "chunkSize": {
                                          "description": "Soft chunk size.",
                                          "type": "number"
                                        },
                                        "maxChunkSize": {
                                          "description": "Hard chunk size.",
                                          "type": "number"
                                        },
                                        "chunkOverlap": {
                                          "description": "Custom chunk overlap.",
                                          "type": "number"
                                        },
                                        "metadata": {
                                          "description": "Custom metadata to be added to the ingested documents. It cannot contain nested objects; only primitive types (string, number, boolean) are allowed.",
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              },
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          }
                                        },
                                        "chunkingStrategy": {
                                          "description": "The chunking strategy to use. Defaults to `basic`.",
                                          "type": "string",
                                          "enum": [
                                            "basic",
                                            "by_title"
                                          ]
                                        },
                                        "strategy": {
                                          "description": "The strategy to use. Defaults to `auto`.",
                                          "type": "string",
                                          "enum": [
                                            "auto",
                                            "fast",
                                            "hi_res",
                                            "ocr_only"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "text"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "FILE"
                                    },
                                    "fileUrl": {
                                      "description": "The URL of the file to ingest.",
                                      "type": "string"
                                    },
                                    "fileName": {
                                      "description": "The name of the file.",
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "config": {
                                      "description": "The ingest job config.",
                                      "type": "object",
                                      "properties": {
                                        "chunkSize": {
                                          "description": "Soft chunk size.",
                                          "type": "number"
                                        },
                                        "maxChunkSize": {
                                          "description": "Hard chunk size.",
                                          "type": "number"
                                        },
                                        "chunkOverlap": {
                                          "description": "Custom chunk overlap.",
                                          "type": "number"
                                        },
                                        "metadata": {
                                          "description": "Custom metadata to be added to the ingested documents. It cannot contain nested objects; only primitive types (string, number, boolean) are allowed.",
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              },
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          }
                                        },
                                        "chunkingStrategy": {
                                          "description": "The chunking strategy to use. Defaults to `basic`.",
                                          "type": "string",
                                          "enum": [
                                            "basic",
                                            "by_title"
                                          ]
                                        },
                                        "strategy": {
                                          "description": "The strategy to use. Defaults to `auto`.",
                                          "type": "string",
                                          "enum": [
                                            "auto",
                                            "fast",
                                            "hi_res",
                                            "ocr_only"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "fileUrl"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "MANAGED_FILE"
                                    },
                                    "key": {
                                      "description": "The key of the managed file to ingest.",
                                      "type": "string"
                                    },
                                    "fileName": {
                                      "description": "The name of the file.",
                                      "anyOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "config": {
                                      "description": "The ingest job config.",
                                      "type": "object",
                                      "properties": {
                                        "chunkSize": {
                                          "description": "Soft chunk size.",
                                          "type": "number"
                                        },
                                        "maxChunkSize": {
                                          "description": "Hard chunk size.",
                                          "type": "number"
                                        },
                                        "chunkOverlap": {
                                          "description": "Custom chunk overlap.",
                                          "type": "number"
                                        },
                                        "metadata": {
                                          "description": "Custom metadata to be added to the ingested documents. It cannot contain nested objects; only primitive types (string, number, boolean) are allowed.",
                                          "type": "object",
                                          "propertyNames": {
                                            "type": "string"
                                          },
                                          "additionalProperties": {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              },
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          }
                                        },
                                        "chunkingStrategy": {
                                          "description": "The chunking strategy to use. Defaults to `basic`.",
                                          "type": "string",
                                          "enum": [
                                            "basic",
                                            "by_title"
                                          ]
                                        },
                                        "strategy": {
                                          "description": "The strategy to use. Defaults to `auto`.",
                                          "type": "string",
                                          "enum": [
                                            "auto",
                                            "fast",
                                            "hi_res",
                                            "ocr_only"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "key"
                                  ]
                                }
                              ],
                              "type": "object"
                            }
                          }
                        },
                        "required": [
                          "type",
                          "items"
                        ]
                      }
                    ],
                    "type": "object"
                  },
                  "config": {
                    "description": "The ingest job config.",
                    "type": "object",
                    "properties": {
                      "chunkSize": {
                        "description": "Soft chunk size.",
                        "type": "number"
                      },
                      "maxChunkSize": {
                        "description": "Hard chunk size.",
                        "type": "number"
                      },
                      "chunkOverlap": {
                        "description": "Custom chunk overlap.",
                        "type": "number"
                      },
                      "metadata": {
                        "description": "Custom metadata to be added to the ingested documents. It cannot contain nested objects; only primitive types (string, number, boolean) are allowed.",
                        "type": "object",
                        "propertyNames": {
                          "type": "string"
                        },
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        }
                      },
                      "chunkingStrategy": {
                        "description": "The chunking strategy to use. Defaults to `basic`.",
                        "type": "string",
                        "enum": [
                          "basic",
                          "by_title"
                        ]
                      },
                      "strategy": {
                        "description": "The strategy to use. Defaults to `auto`.",
                        "type": "string",
                        "enum": [
                          "auto",
                          "fast",
                          "hi_res",
                          "ocr_only"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "payload"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created ingest job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/IngestJobSchema"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/namespace/{namespaceId}/ingest-jobs/{jobId}": {
      "get": {
        "operationId": "getIngestJobInfo",
        "x-speakeasy-name-override": "get",
        "summary": "Retrieve an ingest job",
        "description": "Retrieve the info for an ingest job.",
        "tags": [
          "Ingest Jobs"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespaceId",
            "schema": {
              "description": "The id of the namespace (prefixed with ns_)",
              "examples": [
                "ns_123"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The id of the namespace (prefixed with ns_)"
          },
          {
            "in": "path",
            "name": "jobId",
            "schema": {
              "description": "The id of the ingest job to retrieve.",
              "type": "string"
            },
            "required": true,
            "description": "The id of the ingest job to retrieve."
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "schema": {
              "description": "The tenant id to use for the request. If not provided, the default tenant will be used.",
              "type": "string"
            },
            "description": "The tenant id to use for the request. If not provided, the default tenant will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved ingest job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/IngestJobSchema"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "reingestIngestJob",
        "x-speakeasy-name-override": "re-ingest",
        "x-speakeasy-max-method-params": 1,
        "summary": "Re-ingest an ingest job",
        "description": "Re-ingest an ingest job for the authenticated organization.",
        "tags": [
          "Ingest Jobs"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespaceId",
            "schema": {
              "description": "The id of the namespace (prefixed with ns_)",
              "examples": [
                "ns_123"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The id of the namespace (prefixed with ns_)"
          },
          {
            "in": "path",
            "name": "jobId",
            "schema": {
              "description": "The id of the ingest job to re-ingest.",
              "type": "string"
            },
            "required": true,
            "description": "The id of the ingest job to re-ingest."
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "schema": {
              "description": "The tenant id to use for the request. If not provided, the default tenant will be used.",
              "type": "string"
            },
            "description": "The tenant id to use for the request. If not provided, the default tenant will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "The re-ingested ingest job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The unique ID of the ingest job.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteIngestJob",
        "x-speakeasy-name-override": "delete",
        "x-speakeasy-max-method-params": 1,
        "summary": "Delete an ingest job",
        "description": "Delete an ingest job for the authenticated organization.",
        "tags": [
          "Ingest Jobs"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespaceId",
            "schema": {
              "description": "The id of the namespace (prefixed with ns_)",
              "examples": [
                "ns_123"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The id of the namespace (prefixed with ns_)"
          },
          {
            "in": "path",
            "name": "jobId",
            "schema": {
              "description": "The id of the ingest job to delete.",
              "type": "string"
            },
            "required": true,
            "description": "The id of the ingest job to delete."
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "schema": {
              "description": "The tenant id to use for the request. If not provided, the default tenant will be used.",
              "type": "string"
            },
            "description": "The tenant id to use for the request. If not provided, the default tenant will be used."
          }
        ],
        "responses": {
          "204": {
            "description": "The deleted ingest job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/IngestJobSchema"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/namespace/{namespaceId}/documents": {
      "get": {
        "operationId": "listDocuments",
        "x-speakeasy-name-override": "list",
        "x-speakeasy-pagination": {
          "type": "cursor",
          "inputs": [
            {
              "name": "cursor",
              "in": "parameters",
              "type": "cursor"
            }
          ],
          "outputs": {
            "nextCursor": "$.pagination.nextCursor"
          }
        },
        "summary": "Retrieve a list of documents",
        "description": "Retrieve a paginated list of documents for the authenticated organization.",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespaceId",
            "schema": {
              "description": "The id of the namespace (prefixed with ns_)",
              "examples": [
                "ns_123"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The id of the namespace (prefixed with ns_)"
          },
          {
            "in": "query",
            "name": "statuses",
            "schema": {
              "description": "Comma separated list of statuses to filter by.",
              "type": "string"
            },
            "description": "Comma separated list of statuses to filter by."
          },
          {
            "in": "query",
            "name": "orderBy",
            "schema": {
              "description": "The field to order by. Default is `createdAt`.",
              "default": "createdAt",
              "type": "string",
              "enum": [
                "createdAt"
              ]
            },
            "description": "The field to order by. Default is `createdAt`."
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "description": "The order to sort by. Default is `desc`.",
              "default": "desc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "The order to sort by. Default is `desc`."
          },
          {
            "in": "query",
            "name": "ingestJobId",
            "schema": {
              "description": "The ingest job ID to filter documents by.",
              "type": "string"
            },
            "description": "The ingest job ID to filter documents by."
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "description": "The cursor to paginate by.",
              "type": "string"
            },
            "description": "The cursor to paginate by."
          },
          {
            "in": "query",
            "name": "cursorDirection",
            "schema": {
              "description": "The direction to paginate by.",
              "default": "forward",
              "type": "string",
              "enum": [
                "forward",
                "backward"
              ]
            },
            "description": "The direction to paginate by."
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "description": "The number of records to return per page.",
              "default": 30,
              "type": "number",
              "minimum": 1,
              "maximum": 100
            },
            "description": "The number of records to return per page."
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "schema": {
              "description": "The tenant id to use for the request. If not provided, the default tenant will be used.",
              "type": "string"
            },
            "description": "The tenant id to use for the request. If not provided, the default tenant will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved ingest jobs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentSchema"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "nextCursor": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      },
                      "required": [
                        "nextCursor"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data",
                    "pagination"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/namespace/{namespaceId}/documents/{documentId}": {
      "get": {
        "operationId": "getDocument",
        "x-speakeasy-name-override": "get",
        "summary": "Retrieve a document",
        "description": "Retrieve the info for a document.",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespaceId",
            "schema": {
              "description": "The id of the namespace (prefixed with ns_)",
              "examples": [
                "ns_123"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The id of the namespace (prefixed with ns_)"
          },
          {
            "in": "path",
            "name": "documentId",
            "schema": {
              "description": "The id of the document to retrieve.",
              "type": "string"
            },
            "required": true,
            "description": "The id of the document to retrieve."
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "schema": {
              "description": "The tenant id to use for the request. If not provided, the default tenant will be used.",
              "type": "string"
            },
            "description": "The tenant id to use for the request. If not provided, the default tenant will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved ingest job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/DocumentSchema"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteDocument",
        "x-speakeasy-name-override": "delete",
        "x-speakeasy-max-method-params": 1,
        "summary": "Delete a document",
        "description": "Delete a document for the authenticated organization.",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespaceId",
            "schema": {
              "description": "The id of the namespace (prefixed with ns_)",
              "examples": [
                "ns_123"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The id of the namespace (prefixed with ns_)"
          },
          {
            "in": "path",
            "name": "documentId",
            "schema": {
              "description": "The id of the document to delete.",
              "type": "string"
            },
            "required": true,
            "description": "The id of the document to delete."
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "schema": {
              "description": "The tenant id to use for the request. If not provided, the default tenant will be used.",
              "type": "string"
            },
            "description": "The tenant id to use for the request. If not provided, the default tenant will be used."
          }
        ],
        "responses": {
          "204": {
            "description": "The deleted document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/DocumentSchema"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/namespace/{namespaceId}/search": {
      "post": {
        "operationId": "search",
        "x-speakeasy-name-override": "search",
        "summary": "Search a namespace",
        "description": "Search a namespace for a query.",
        "tags": [
          "Search"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespaceId",
            "schema": {
              "description": "The id of the namespace (prefixed with ns_)",
              "examples": [
                "ns_123"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The id of the namespace (prefixed with ns_)"
          },
          {
            "in": "header",
            "name": "x-tenant-id",
            "schema": {
              "description": "The tenant id to use for the request. If not provided, the default tenant will be used.",
              "type": "string"
            },
            "description": "The tenant id to use for the request. If not provided, the default tenant will be used."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "description": "The query to search for.",
                    "type": "string"
                  },
                  "topK": {
                    "description": "The number of results to fetch from the vector store. Defaults to `10`.",
                    "default": 10,
                    "type": "number",
                    "minimum": 1,
                    "maximum": 100
                  },
                  "rerank": {
                    "description": "Whether to rerank the results. Defaults to `true`.",
                    "default": true,
                    "type": "boolean"
                  },
                  "rerankLimit": {
                    "description": "The number of results to return after reranking. Defaults to `topK`.",
                    "type": "number",
                    "minimum": 1,
                    "maximum": 100
                  },
                  "filter": {
                    "description": "A filter to apply to the results.",
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {}
                  },
                  "minScore": {
                    "description": "The minimum score to return.",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                  },
                  "includeRelationships": {
                    "description": "Whether to include relationships in the results. Defaults to `false`.",
                    "default": false,
                    "type": "boolean"
                  },
                  "includeMetadata": {
                    "description": "Whether to include metadata in the results. Defaults to `true`.",
                    "default": true,
                    "type": "boolean"
                  },
                  "keywordFilter": {
                    "type": "string"
                  },
                  "mode": {
                    "default": "semantic",
                    "type": "string",
                    "enum": [
                      "semantic",
                      "keyword"
                    ]
                  }
                },
                "required": [
                  "query"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The retrieved namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "score": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 1
                          },
                          "text": {
                            "type": "string"
                          },
                          "relationships": {
                            "type": "object",
                            "propertyNames": {
                              "type": "string"
                            },
                            "additionalProperties": {}
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "file_directory": {
                                "type": "string"
                              },
                              "filename": {
                                "type": "string"
                              },
                              "filetype": {
                                "type": "string"
                              },
                              "link_texts": {
                                "type": "array",
                                "items": {}
                              },
                              "link_urls": {
                                "type": "array",
                                "items": {}
                              },
                              "languages": {
                                "type": "array",
                                "items": {}
                              },
                              "sequence_number": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "file_directory",
                              "filename",
                              "filetype"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "id",
                          "score"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/namespace/{namespaceId}/uploads": {
      "post": {
        "operationId": "createUpload",
        "x-speakeasy-name-override": "create",
        "summary": "Create presigned URL for file upload",
        "description": "Generate a presigned URL for uploading a single file to the specified namespace.",
        "tags": [
          "Uploads"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespaceId",
            "schema": {
              "description": "The id of the namespace (prefixed with ns_)",
              "examples": [
                "ns_123"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The id of the namespace (prefixed with ns_)"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileName": {
                    "description": "File name",
                    "examples": [
                      "document.pdf"
                    ],
                    "type": "string",
                    "minLength": 1
                  },
                  "contentType": {
                    "description": "Content type",
                    "examples": [
                      "application/pdf"
                    ],
                    "type": "string"
                  },
                  "fileSize": {
                    "description": "File size in bytes",
                    "examples": [
                      1024
                    ],
                    "type": "number",
                    "minimum": 1,
                    "maximum": 209715200
                  }
                },
                "required": [
                  "fileName",
                  "contentType",
                  "fileSize"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Presigned URL generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "description": "Presigned URL for file upload. Make a `PUT` request to this URL with the file content and the `Content-Type` header.",
                          "type": "string",
                          "format": "uri"
                        },
                        "key": {
                          "description": "Key of the file in the storage. You'll send this in the `MANAGED_FILE` payload when creating an ingest job.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "url",
                        "key"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/namespace/{namespaceId}/uploads/batch": {
      "post": {
        "operationId": "createBatchUpload",
        "x-speakeasy-name-override": "createBatch",
        "summary": "Create presigned URLs for batch file upload",
        "description": "Generate presigned URLs for uploading multiple files to the specified namespace.",
        "tags": [
          "Uploads"
        ],
        "security": [
          {
            "token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "namespaceId",
            "schema": {
              "description": "The id of the namespace (prefixed with ns_)",
              "examples": [
                "ns_123"
              ],
              "type": "string"
            },
            "required": true,
            "description": "The id of the namespace (prefixed with ns_)"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "minItems": 1,
                    "maxItems": 100,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fileName": {
                          "description": "File name",
                          "examples": [
                            "document.pdf"
                          ],
                          "type": "string",
                          "minLength": 1
                        },
                        "contentType": {
                          "description": "Content type",
                          "examples": [
                            "application/pdf"
                          ],
                          "type": "string"
                        },
                        "fileSize": {
                          "description": "File size in bytes",
                          "examples": [
                            1024
                          ],
                          "type": "number",
                          "minimum": 1,
                          "maximum": 209715200
                        }
                      },
                      "required": [
                        "fileName",
                        "contentType",
                        "fileSize"
                      ]
                    }
                  }
                },
                "required": [
                  "files"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Presigned URLs generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "const": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "description": "Presigned URL for file upload. Make a `PUT` request to this URL with the file content and the `Content-Type` header.",
                            "type": "string",
                            "format": "uri"
                          },
                          "key": {
                            "description": "Key of the file in the storage. You'll send this in the `MANAGED_FILE` payload when creating an ingest job.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "url",
                          "key"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "BadRequest",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "bad_request"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "bad_request"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Unauthorized",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unauthorized"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unauthorized"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Forbidden",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "forbidden"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "forbidden"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "NotFound",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "not_found"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "not_found"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#not-found"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "Conflict",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "conflict"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "conflict"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#conflict"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InviteExpired",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "invite_expired"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "invite_expired"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "The request was well-formed but was unable to be followed due to semantic errors.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "UnprocessableEntity",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "unprocessable_entity"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "unprocessable_entity"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "RateLimitExceeded",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "rate_limit_exceeded"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "rate_limit_exceeded"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "x-speakeasy-name-override": "InternalServerError",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "internal_server_error"
                          ],
                          "description": "A short code indicating the error code returned.",
                          "example": "internal_server_error"
                        },
                        "message": {
                          "x-speakeasy-error-message": true,
                          "type": "string",
                          "description": "A human readable explanation of what went wrong.",
                          "example": "The requested resource was not found."
                        },
                        "doc_url": {
                          "type": "string",
                          "description": "A link to our documentation with more details about this error code",
                          "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                        }
                      },
                      "required": [
                        "code",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EmbeddingConfigSchema": {
        "description": "The embedding model config. If not provided, our managed embedding model will be used. Note: You can't change the embedding model config after the namespace is created.",
        "oneOf": [
          {
            "title": "OpenAI Embedding Config",
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "const": "OPENAI"
              },
              "model": {
                "type": "string",
                "enum": [
                  "text-embedding-3-small",
                  "text-embedding-3-large"
                ]
              },
              "apiKey": {
                "type": "string"
              }
            },
            "required": [
              "provider",
              "model",
              "apiKey"
            ]
          },
          {
            "title": "Azure Embedding Config",
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "const": "AZURE_OPENAI"
              },
              "model": {
                "type": "string",
                "enum": [
                  "text-embedding-3-small",
                  "text-embedding-3-large"
                ]
              },
              "resourceName": {
                "description": "The resource name of the Azure OpenAI API. https://{resourceName}.openai.azure.com/v1",
                "example": "my-resource-name",
                "type": "string",
                "format": "uri"
              },
              "deployment": {
                "description": "The deployment name of the Azure OpenAI API.",
                "type": "string"
              },
              "apiKey": {
                "description": "The API key for the Azure OpenAI API.",
                "type": "string"
              },
              "apiVersion": {
                "description": "The API version for the Azure OpenAI API. Defaults to `preview`.",
                "default": "preview",
                "type": "string"
              }
            },
            "required": [
              "provider",
              "model",
              "resourceName",
              "deployment",
              "apiKey"
            ]
          },
          {
            "title": "Voyage Embedding Config",
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "const": "VOYAGE"
              },
              "model": {
                "type": "string",
                "enum": [
                  "voyage-3-large",
                  "voyage-3",
                  "voyage-3-lite",
                  "voyage-code-3",
                  "voyage-finance-2",
                  "voyage-law-2"
                ]
              },
              "apiKey": {
                "type": "string"
              }
            },
            "required": [
              "provider",
              "model",
              "apiKey"
            ]
          },
          {
            "title": "Google Embedding Config",
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "const": "GOOGLE"
              },
              "model": {
                "type": "string",
                "enum": [
                  "text-embedding-004"
                ]
              },
              "apiKey": {
                "type": "string"
              }
            },
            "required": [
              "provider",
              "model",
              "apiKey"
            ]
          }
        ],
        "type": "object"
      },
      "VectorStoreSchema": {
        "description": "The vector store config. If not provided, our managed vector store will be used. Note: You can't change the vector store config after the namespace is created.",
        "oneOf": [
          {
            "title": "Pinecone Config",
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "const": "PINECONE"
              },
              "apiKey": {
                "description": "The API key for the Pinecone index.",
                "type": "string"
              },
              "indexHost": {
                "description": "The host of the Pinecone index.",
                "example": "https://example.svc.aped-1234-a56b.pinecone.io",
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "provider",
              "apiKey",
              "indexHost"
            ]
          }
        ],
        "type": "object"
      },
      "IngestJobStatusSchema": {
        "description": "The status of the ingest job.",
        "type": "string",
        "enum": [
          "BACKLOG",
          "QUEUED",
          "QUEUED_FOR_RESYNC",
          "QUEUED_FOR_DELETE",
          "PRE_PROCESSING",
          "PROCESSING",
          "DELETING",
          "CANCELLING",
          "COMPLETED",
          "FAILED",
          "CANCELLED"
        ]
      },
      "DocumentStatusSchema": {
        "description": "The status of the document.",
        "type": "string",
        "enum": [
          "BACKLOG",
          "QUEUED",
          "QUEUED_FOR_RESYNC",
          "QUEUED_FOR_DELETE",
          "PRE_PROCESSING",
          "PROCESSING",
          "DELETING",
          "CANCELLING",
          "COMPLETED",
          "FAILED",
          "CANCELLED"
        ]
      },
      "NamespaceSchema": {
        "title": "Namespace",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique ID of the namespace.",
            "type": "string"
          },
          "name": {
            "description": "The name of the namespace.",
            "type": "string"
          },
          "slug": {
            "description": "The slug of the namespace.",
            "type": "string"
          },
          "organizationId": {
            "description": "The ID of the organization that owns the namespace.",
            "type": "string"
          },
          "createdAt": {
            "description": "The date and time the namespace was created.",
            "type": "string"
          },
          "embeddingConfig": {
            "default": null,
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmbeddingConfigSchemaOutput"
              },
              {
                "type": "null"
              }
            ]
          },
          "vectorStoreConfig": {
            "default": null,
            "anyOf": [
              {
                "$ref": "#/components/schemas/VectorStoreSchemaOutput"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "id",
          "name",
          "slug",
          "organizationId",
          "createdAt",
          "embeddingConfig",
          "vectorStoreConfig"
        ],
        "additionalProperties": false
      },
      "IngestJobSchema": {
        "title": "Ingest Job",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique ID of the ingest job.",
            "type": "string"
          },
          "name": {
            "description": "The name of the ingest job.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "namespaceId": {
            "description": "The namespace ID of the ingest job.",
            "type": "string"
          },
          "tenantId": {
            "description": "The tenant ID of the ingest job.",
            "default": null,
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/IngestJobStatusSchema"
          },
          "error": {
            "description": "The error message of the ingest job. Only exists when the status is failed.",
            "default": null,
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "payload": {
            "description": "The ingest job payload.",
            "oneOf": [
              {
                "title": "Text Payload",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "TEXT"
                  },
                  "text": {
                    "description": "The text to ingest.",
                    "type": "string"
                  },
                  "fileName": {
                    "description": "The name of the file.",
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "text"
                ],
                "additionalProperties": false
              },
              {
                "title": "URL Payload",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "FILE"
                  },
                  "fileUrl": {
                    "description": "The URL of the file to ingest.",
                    "type": "string"
                  },
                  "fileName": {
                    "description": "The name of the file.",
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "fileUrl"
                ],
                "additionalProperties": false
              },
              {
                "title": "Managed File Payload",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "MANAGED_FILE"
                  },
                  "key": {
                    "description": "The key of the managed file to ingest.",
                    "type": "string"
                  },
                  "fileName": {
                    "description": "The name of the file.",
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "type",
                  "key"
                ],
                "additionalProperties": false
              },
              {
                "title": "Batch Payload",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "BATCH"
                  },
                  "items": {
                    "description": "The items to ingest.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "TEXT"
                            },
                            "text": {
                              "description": "The text to ingest.",
                              "type": "string"
                            },
                            "fileName": {
                              "description": "The name of the file.",
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "config": {
                              "description": "The ingest job config.",
                              "type": "object",
                              "properties": {
                                "chunkSize": {
                                  "description": "Soft chunk size.",
                                  "type": "number"
                                },
                                "maxChunkSize": {
                                  "description": "Hard chunk size.",
                                  "type": "number"
                                },
                                "chunkOverlap": {
                                  "description": "Custom chunk overlap.",
                                  "type": "number"
                                },
                                "metadata": {
                                  "description": "Custom metadata to be added to the ingested documents. It cannot contain nested objects; only primitive types (string, number, boolean) are allowed.",
                                  "type": "object",
                                  "propertyNames": {
                                    "type": "string"
                                  },
                                  "additionalProperties": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  }
                                },
                                "chunkingStrategy": {
                                  "description": "The chunking strategy to use. Defaults to `basic`.",
                                  "type": "string",
                                  "enum": [
                                    "basic",
                                    "by_title"
                                  ]
                                },
                                "strategy": {
                                  "description": "The strategy to use. Defaults to `auto`.",
                                  "type": "string",
                                  "enum": [
                                    "auto",
                                    "fast",
                                    "hi_res",
                                    "ocr_only"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "type",
                            "text"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "FILE"
                            },
                            "fileUrl": {
                              "description": "The URL of the file to ingest.",
                              "type": "string"
                            },
                            "fileName": {
                              "description": "The name of the file.",
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "config": {
                              "description": "The ingest job config.",
                              "type": "object",
                              "properties": {
                                "chunkSize": {
                                  "description": "Soft chunk size.",
                                  "type": "number"
                                },
                                "maxChunkSize": {
                                  "description": "Hard chunk size.",
                                  "type": "number"
                                },
                                "chunkOverlap": {
                                  "description": "Custom chunk overlap.",
                                  "type": "number"
                                },
                                "metadata": {
                                  "description": "Custom metadata to be added to the ingested documents. It cannot contain nested objects; only primitive types (string, number, boolean) are allowed.",
                                  "type": "object",
                                  "propertyNames": {
                                    "type": "string"
                                  },
                                  "additionalProperties": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  }
                                },
                                "chunkingStrategy": {
                                  "description": "The chunking strategy to use. Defaults to `basic`.",
                                  "type": "string",
                                  "enum": [
                                    "basic",
                                    "by_title"
                                  ]
                                },
                                "strategy": {
                                  "description": "The strategy to use. Defaults to `auto`.",
                                  "type": "string",
                                  "enum": [
                                    "auto",
                                    "fast",
                                    "hi_res",
                                    "ocr_only"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "type",
                            "fileUrl"
                          ],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "MANAGED_FILE"
                            },
                            "key": {
                              "description": "The key of the managed file to ingest.",
                              "type": "string"
                            },
                            "fileName": {
                              "description": "The name of the file.",
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "config": {
                              "description": "The ingest job config.",
                              "type": "object",
                              "properties": {
                                "chunkSize": {
                                  "description": "Soft chunk size.",
                                  "type": "number"
                                },
                                "maxChunkSize": {
                                  "description": "Hard chunk size.",
                                  "type": "number"
                                },
                                "chunkOverlap": {
                                  "description": "Custom chunk overlap.",
                                  "type": "number"
                                },
                                "metadata": {
                                  "description": "Custom metadata to be added to the ingested documents. It cannot contain nested objects; only primitive types (string, number, boolean) are allowed.",
                                  "type": "object",
                                  "propertyNames": {
                                    "type": "string"
                                  },
                                  "additionalProperties": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  }
                                },
                                "chunkingStrategy": {
                                  "description": "The chunking strategy to use. Defaults to `basic`.",
                                  "type": "string",
                                  "enum": [
                                    "basic",
                                    "by_title"
                                  ]
                                },
                                "strategy": {
                                  "description": "The strategy to use. Defaults to `auto`.",
                                  "type": "string",
                                  "enum": [
                                    "auto",
                                    "fast",
                                    "hi_res",
                                    "ocr_only"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "type",
                            "key"
                          ],
                          "additionalProperties": false
                        }
                      ],
                      "type": "object"
                    }
                  }
                },
                "required": [
                  "type",
                  "items"
                ],
                "additionalProperties": false
              }
            ],
            "type": "object"
          },
          "config": {
            "default": null,
            "anyOf": [
              {
                "description": "The ingest job config.",
                "type": "object",
                "properties": {
                  "chunkSize": {
                    "description": "Soft chunk size.",
                    "type": "number"
                  },
                  "maxChunkSize": {
                    "description": "Hard chunk size.",
                    "type": "number"
                  },
                  "chunkOverlap": {
                    "description": "Custom chunk overlap.",
                    "type": "number"
                  },
                  "metadata": {
                    "description": "Custom metadata to be added to the ingested documents. It cannot contain nested objects; only primitive types (string, number, boolean) are allowed.",
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "boolean"
                        }
                      ]
                    }
                  },
                  "chunkingStrategy": {
                    "description": "The chunking strategy to use. Defaults to `basic`.",
                    "type": "string",
                    "enum": [
                      "basic",
                      "by_title"
                    ]
                  },
                  "strategy": {
                    "description": "The strategy to use. Defaults to `auto`.",
                    "type": "string",
                    "enum": [
                      "auto",
                      "fast",
                      "hi_res",
                      "ocr_only"
                    ]
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "description": "The date and time the namespace was created.",
            "type": "string"
          },
          "queuedAt": {
            "default": null,
            "description": "The date and time the ingest job was queued.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "preProcessingAt": {
            "default": null,
            "description": "The date and time the ingest job was pre-processed.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "processingAt": {
            "default": null,
            "description": "The date and time the ingest job was processed.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "completedAt": {
            "default": null,
            "description": "The date and time the ingest job was completed.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "failedAt": {
            "default": null,
            "description": "The date and time the ingest job failed.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "id",
          "namespaceId",
          "tenantId",
          "status",
          "error",
          "payload",
          "config",
          "createdAt",
          "queuedAt",
          "preProcessingAt",
          "processingAt",
          "completedAt",
          "failedAt"
        ],
        "additionalProperties": false
      },
      "DocumentSchema": {
        "title": "Document",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique ID of the document.",
            "type": "string"
          },
          "ingestJobId": {
            "description": "The ingest job ID of the document.",
            "type": "string"
          },
          "externalId": {
            "description": "A unique external ID.",
            "default": null,
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "description": "The name of the document.",
            "default": null,
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "tenantId": {
            "description": "The tenant ID of the ingest job.",
            "default": null,
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/DocumentStatusSchema"
          },
          "error": {
            "description": "The error message of the document. Only exists when the status is failed.",
            "default": null,
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "source": {
            "description": "The source of the document.",
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "TEXT"
                  },
                  "text": {
                    "description": "The text to ingest.",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "text"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "FILE"
                  },
                  "fileUrl": {
                    "description": "The URL of the file to ingest.",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "fileUrl"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "MANAGED_FILE"
                  },
                  "key": {
                    "description": "The key of the managed file to ingest.",
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "key"
                ],
                "additionalProperties": false
              }
            ],
            "type": "object"
          },
          "properties": {
            "default": null,
            "anyOf": [
              {
                "description": "The properties of the document.",
                "type": "object",
                "properties": {
                  "fileSize": {
                    "description": "The size of the file in bytes.",
                    "type": "number"
                  },
                  "mimeType": {
                    "description": "The MIME type of the file.",
                    "default": null,
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "fileSize",
                  "mimeType"
                ],
                "additionalProperties": false
              },
              {
                "type": "null"
              }
            ]
          },
          "totalChunks": {
            "description": "The total number of chunks.",
            "type": "number"
          },
          "totalTokens": {
            "description": "The total number of tokens.",
            "type": "number"
          },
          "totalCharacters": {
            "description": "The total number of characters.",
            "type": "number"
          },
          "totalPages": {
            "description": "The total number of pages. Will be 0 if the document is not paged (e.g. PDF).",
            "type": "number"
          },
          "createdAt": {
            "description": "The date and time the document was created.",
            "type": "string"
          },
          "queuedAt": {
            "default": null,
            "description": "The date and time the document was queued.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "preProcessingAt": {
            "default": null,
            "description": "The date and time the document was pre-processed.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "processingAt": {
            "default": null,
            "description": "The date and time the document was processed.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "completedAt": {
            "default": null,
            "description": "The date and time the document was completed.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "failedAt": {
            "default": null,
            "description": "The date and time the document failed.",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "id",
          "ingestJobId",
          "externalId",
          "name",
          "tenantId",
          "status",
          "error",
          "source",
          "properties",
          "totalChunks",
          "totalTokens",
          "totalCharacters",
          "totalPages",
          "createdAt",
          "queuedAt",
          "preProcessingAt",
          "processingAt",
          "completedAt",
          "failedAt"
        ],
        "additionalProperties": false
      },
      "EmbeddingConfigSchemaOutput": {
        "description": "The embedding model config. If not provided, our managed embedding model will be used. Note: You can't change the embedding model config after the namespace is created.",
        "oneOf": [
          {
            "title": "OpenAI Embedding Config",
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "const": "OPENAI"
              },
              "model": {
                "type": "string",
                "enum": [
                  "text-embedding-3-small",
                  "text-embedding-3-large"
                ]
              },
              "apiKey": {
                "type": "string"
              }
            },
            "required": [
              "provider",
              "model",
              "apiKey"
            ],
            "additionalProperties": false
          },
          {
            "title": "Azure Embedding Config",
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "const": "AZURE_OPENAI"
              },
              "model": {
                "type": "string",
                "enum": [
                  "text-embedding-3-small",
                  "text-embedding-3-large"
                ]
              },
              "resourceName": {
                "description": "The resource name of the Azure OpenAI API. https://{resourceName}.openai.azure.com/v1",
                "example": "my-resource-name",
                "type": "string",
                "format": "uri"
              },
              "deployment": {
                "description": "The deployment name of the Azure OpenAI API.",
                "type": "string"
              },
              "apiKey": {
                "description": "The API key for the Azure OpenAI API.",
                "type": "string"
              },
              "apiVersion": {
                "description": "The API version for the Azure OpenAI API. Defaults to `preview`.",
                "default": "preview",
                "type": "string"
              }
            },
            "required": [
              "provider",
              "model",
              "resourceName",
              "deployment",
              "apiKey"
            ],
            "additionalProperties": false
          },
          {
            "title": "Voyage Embedding Config",
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "const": "VOYAGE"
              },
              "model": {
                "type": "string",
                "enum": [
                  "voyage-3-large",
                  "voyage-3",
                  "voyage-3-lite",
                  "voyage-code-3",
                  "voyage-finance-2",
                  "voyage-law-2"
                ]
              },
              "apiKey": {
                "type": "string"
              }
            },
            "required": [
              "provider",
              "model",
              "apiKey"
            ],
            "additionalProperties": false
          },
          {
            "title": "Google Embedding Config",
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "const": "GOOGLE"
              },
              "model": {
                "type": "string",
                "enum": [
                  "text-embedding-004"
                ]
              },
              "apiKey": {
                "type": "string"
              }
            },
            "required": [
              "provider",
              "model",
              "apiKey"
            ],
            "additionalProperties": false
          }
        ],
        "type": "object"
      },
      "VectorStoreSchemaOutput": {
        "description": "The vector store config. If not provided, our managed vector store will be used. Note: You can't change the vector store config after the namespace is created.",
        "oneOf": [
          {
            "title": "Pinecone Config",
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "const": "PINECONE"
              },
              "apiKey": {
                "description": "The API key for the Pinecone index.",
                "type": "string"
              },
              "indexHost": {
                "description": "The host of the Pinecone index.",
                "example": "https://example.svc.aped-1234-a56b.pinecone.io",
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "provider",
              "apiKey",
              "indexHost"
            ],
            "additionalProperties": false
          }
        ],
        "type": "object"
      }
    },
    "responses": {
      "400": {
        "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "BadRequest",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_request"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "bad_request"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "401": {
        "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "Unauthorized",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "unauthorized"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "unauthorized"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "403": {
        "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "Forbidden",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "forbidden"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "forbidden"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "404": {
        "description": "The server cannot find the requested resource.",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "NotFound",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "not_found"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "not_found"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#not-found"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "409": {
        "description": "This response is sent when a request conflicts with the current state of the server.",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "Conflict",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "conflict"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "conflict"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#conflict"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "410": {
        "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "InviteExpired",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "invite_expired"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "invite_expired"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "422": {
        "description": "The request was well-formed but was unable to be followed due to semantic errors.",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "UnprocessableEntity",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "unprocessable_entity"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "unprocessable_entity"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "429": {
        "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "RateLimitExceeded",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "rate_limit_exceeded"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "rate_limit_exceeded"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "500": {
        "description": "The server has encountered a situation it does not know how to handle.",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "InternalServerError",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "internal_server_error"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "internal_server_error"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "bad_request": {
        "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "BadRequest",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "bad_request"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "bad_request"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#bad-request"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "unauthorized": {
        "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "Unauthorized",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "unauthorized"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "unauthorized"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#unauthorized"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "forbidden": {
        "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "Forbidden",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "forbidden"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "forbidden"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#forbidden"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "not_found": {
        "description": "The server cannot find the requested resource.",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "NotFound",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "not_found"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "not_found"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#not-found"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "conflict": {
        "description": "This response is sent when a request conflicts with the current state of the server.",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "Conflict",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "conflict"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "conflict"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#conflict"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "invite_expired": {
        "description": "This response is sent when the requested content has been permanently deleted from server, with no forwarding address.",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "InviteExpired",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "invite_expired"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "invite_expired"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#invite-expired"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "unprocessable_entity": {
        "description": "The request was well-formed but was unable to be followed due to semantic errors.",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "UnprocessableEntity",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "unprocessable_entity"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "unprocessable_entity"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#unprocessable-entity"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "rate_limit_exceeded": {
        "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "RateLimitExceeded",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "rate_limit_exceeded"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "rate_limit_exceeded"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#rate-limit_exceeded"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      },
      "internal_server_error": {
        "description": "The server has encountered a situation it does not know how to handle.",
        "content": {
          "application/json": {
            "schema": {
              "x-speakeasy-name-override": "InternalServerError",
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "internal_server_error"
                      ],
                      "description": "A short code indicating the error code returned.",
                      "example": "internal_server_error"
                    },
                    "message": {
                      "x-speakeasy-error-message": true,
                      "type": "string",
                      "description": "A human readable explanation of what went wrong.",
                      "example": "The requested resource was not found."
                    },
                    "doc_url": {
                      "type": "string",
                      "description": "A link to our documentation with more details about this error code",
                      "example": "https://docs.agentset.com/api-reference/errors#internal-server_error"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              },
              "required": [
                "success",
                "error"
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "token": {
        "type": "http",
        "description": "Default authentication mechanism",
        "scheme": "bearer",
        "x-speakeasy-example": "AGENTSET_API_KEY"
      }
    }
  }
}